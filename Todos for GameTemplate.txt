- Make CMC read movement values from an attribute set.
- Make the example ability for the ExampleAbilitySystemCharacter more unusual than GA_Fire because it needs to emphasise that it's a specific ability to that one character.
- Change the "GetLevel() doesn't exist in this template. Will need to implement one if you want a level system" comment so that it works without it being a template
- Add a UE_LOG if NewAbility is null in GrantAbility:
	- UE_LOG(LogAbilitySystemSetup, Error, TEXT("Could'nt grant ability. NewAbility was null"));
- Add a DECLARE_MULTICAST_DELEGATE(FSetupWithAbilitySystemCompleted); in AbilitySystemCharacter.h.
	- Also do this kind of thing for the AbilitySystemPawn and AbilitySystemActor
- Fix gameplay ability UE_LOGs
	- the character run ability logs say jump instead of run
- Allow developer to specify multible DefaultAttributeValues GEs. Good for organization (ie. GE for movement attributes and one for damage attributes)
- Add message log by default for game template
- In GTCharacter, change the setup attachments to GetCapsuleComponent() instead of RootComponent
- Git rid of kismetsystemlibrary include in middle of abilitysystemcharacter code
- Maybe uncomment the PrimaryActorTick.bCanEverTick = false; to more strongly enforce



- Change the BAA_ classes to use a Gampelaytask instead. We had a discussion about this in the GAS discord and someone converted it without any weird problems.
- Move as much checks as you can from AcivateAbility into CanActivateAbility so that we can get activation rollback.
- In GTGameplayAbility, change implementation for ActivateAbility(). Shouldn't cancel ability if no valid prediction key. Also wrap it in an if check to make sure the NetExecutionPolicy is set to LocalPredicted for that logic to occur.
- For the Abilities we have, move the if (CommitAbility) check to be the last check
- Implement a way to be able to easily add passive abilities in the character BP. Also modify GrantAbility to be able to activate ability on grant. Also make GTGameplayAbility override OnAvatarSet() to activate the ability if a bool is true
- Move CMC movement variables to CharacterAttributeSet.h
- Add CollisionChannels.h or something like that
- GASShooter has a custom subclass of AGameplayAbilityTargetActor and a new WaitTargetDataWithReusableActor AbilityTask written from scratch that allows you to reuse a TargetActor without destroying it.



